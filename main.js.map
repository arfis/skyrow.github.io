{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/contact-add-dialog/contact-add-dialog.component.html","webpack:///./src/app/components/contact-add-dialog/contact-add-dialog.component.scss","webpack:///./src/app/components/contact-add-dialog/contact-add-dialog.component.ts","webpack:///./src/app/components/create-question/create-question.component.html","webpack:///./src/app/components/create-question/create-question.component.scss","webpack:///./src/app/components/create-question/create-question.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/language-selector/language-selector.component.html","webpack:///./src/app/components/language-selector/language-selector.component.scss","webpack:///./src/app/components/language-selector/language-selector.component.ts","webpack:///./src/app/components/new-question-page/new-question-page.component.html","webpack:///./src/app/components/new-question-page/new-question-page.component.scss","webpack:///./src/app/components/new-question-page/new-question-page.component.ts","webpack:///./src/app/components/poll-result/poll-result.component.html","webpack:///./src/app/components/poll-result/poll-result.component.scss","webpack:///./src/app/components/poll-result/poll-result.component.ts","webpack:///./src/app/components/pool-action-element/pool-action-element.component.html","webpack:///./src/app/components/pool-action-element/pool-action-element.component.scss","webpack:///./src/app/components/pool-action-element/pool-action-element.component.ts","webpack:///./src/app/components/pool-actions/pool-actions.component.html","webpack:///./src/app/components/pool-actions/pool-actions.component.scss","webpack:///./src/app/components/pool-actions/pool-actions.component.ts","webpack:///./src/app/components/pool-settings/pool-settings.component.html","webpack:///./src/app/components/pool-settings/pool-settings.component.scss","webpack:///./src/app/components/pool-settings/pool-settings.component.ts","webpack:///./src/app/components/pool-summary/pool-summary.component.html","webpack:///./src/app/components/pool-summary/pool-summary.component.scss","webpack:///./src/app/components/pool-summary/pool-summary.component.ts","webpack:///./src/app/components/pool-tile/pool-tile.component.html","webpack:///./src/app/components/pool-tile/pool-tile.component.scss","webpack:///./src/app/components/pool-tile/pool-tile.component.ts","webpack:///./src/app/components/pool/pool.component.html","webpack:///./src/app/components/pool/pool.component.scss","webpack:///./src/app/components/pool/pool.component.ts","webpack:///./src/app/components/profile-detail/profile-detail.component.html","webpack:///./src/app/components/profile-detail/profile-detail.component.scss","webpack:///./src/app/components/profile-detail/profile-detail.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.scss","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/nos-wrapper/nos-wrapper.module.ts","webpack:///./src/app/nos-wrapper/services/nos-api.service.ts","webpack:///./src/app/pages/about-page/about-page.component.html","webpack:///./src/app/pages/about-page/about-page.component.scss","webpack:///./src/app/pages/about-page/about-page.component.ts","webpack:///./src/app/pages/changelog-page/changelog-page.component.html","webpack:///./src/app/pages/changelog-page/changelog-page.component.scss","webpack:///./src/app/pages/changelog-page/changelog-page.component.ts","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.html","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.scss","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.ts","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.html","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.scss","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.ts","webpack:///./src/app/pages/page-not-found/page-not-found.component.html","webpack:///./src/app/pages/page-not-found/page-not-found.component.scss","webpack:///./src/app/pages/page-not-found/page-not-found.component.ts","webpack:///./src/app/pages/page-skelet/page-skelet.component.html","webpack:///./src/app/pages/page-skelet/page-skelet.component.scss","webpack:///./src/app/pages/page-skelet/page-skelet.component.ts","webpack:///./src/app/pages/polls-result/polls-result.component.html","webpack:///./src/app/pages/polls-result/polls-result.component.scss","webpack:///./src/app/pages/polls-result/polls-result.component.ts","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.html","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.scss","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.ts","webpack:///./src/app/pages/pools-page/pools-page.component.html","webpack:///./src/app/pages/pools-page/pools-page.component.scss","webpack:///./src/app/pages/pools-page/pools-page.component.ts","webpack:///./src/app/pages/profile-page/profile-page.component.html","webpack:///./src/app/pages/profile-page/profile-page.component.scss","webpack:///./src/app/pages/profile-page/profile-page.component.ts","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.html","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.scss","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.ts","webpack:///./src/app/shared/animations.ts","webpack:///./src/app/shared/contact/contact.service.ts","webpack:///./src/app/shared/core/Methods.ts","webpack:///./src/app/shared/core/helper.ts","webpack:///./src/app/shared/localizationDatePipe/localization-date-pipe.pipe.ts","webpack:///./src/app/shared/pools/pollListType.ts","webpack:///./src/app/shared/pools/polls.actions.ts","webpack:///./src/app/shared/pools/polls.helper.ts","webpack:///./src/app/shared/pools/polls.state.ts","webpack:///./src/app/shared/pools/pool-resolver.service.ts","webpack:///./src/app/shared/pools/pools.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport { slideInAnimation } from './shared/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  address;\n\n  constructor(private _translateService: TranslateService) {\n    _translateService.addLangs(['sk', 'en']);\n    _translateService.setDefaultLang('en');\n\n    // const browserLang = this._translateService.getBrowserLang();\n    _translateService.use('en');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { appRoutes } from './app.routes';\nimport { RouterModule } from '@angular/router';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {\n  MatButtonModule,\n  MatCheckboxModule, MatDatepickerModule, MatIconModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatStepperModule,\n  NativeDateAdapter,\n  DateAdapter,\n  MatNativeDateModule, MatFormFieldModule, MatInputModule, MatCardModule, MatButtonToggleModule\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartModule } from 'primeng/chart';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { registerLocaleData } from '@angular/common';\nimport localeSk from '@angular/common/locales/sk';\nimport { NosApiService } from './nos-wrapper/services/nos-api.service';\n\nimport { PoolSummaryComponent } from './components/pool-summary/pool-summary.component';\nimport { CreatePoolProcessPageComponent } from './pages/create-pool-process-page/create-pool-process-page.component';\nimport { SplashScreenPageComponent } from './pages/splash-screen-page/splash-screen-page.component';\nimport { ContactListPageComponent } from './pages/contact-list-page/contact-list-page.component';\nimport { PoolsPageComponent } from './pages/pools-page/pools-page.component';\nimport { PoolTileComponent } from './components/pool-tile/pool-tile.component';\nimport { PoolFillPageComponent } from './pages/pool-fill-page/pool-fill-page.component';\nimport { PoolComponent } from './components/pool/pool.component';\nimport { ProfilePageComponent } from './pages/profile-page/profile-page.component';\nimport { AboutPageComponent } from './pages/about-page/about-page.component';\nimport { ChangelogPageComponent } from './pages/changelog-page/changelog-page.component';\nimport { LanguageSelectorComponent } from './components/language-selector/language-selector.component';\nimport { PoolSettingsComponent } from './components/pool-settings/pool-settings.component';\nimport { LocalizedDatePipe } from './shared/localizationDatePipe/localization-date-pipe.pipe';\nimport { PollsResultPageComponent } from './pages/polls-result/polls-result.component';\nimport { PollResultComponent } from './components/poll-result/poll-result.component';\nimport { CreateQuestionComponent } from './components/create-question/create-question.component';\nimport { ContactAddDialogComponent } from './components/contact-add-dialog/contact-add-dialog.component';\nimport { PoolsService } from './shared/pools/pools.service';\nimport { PollsState } from './shared/pools/polls.state';\nimport { AppComponent } from './app.component';\nimport { PageSkeletComponent } from './pages/page-skelet/page-skelet.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PoolActionsComponent } from './components/pool-actions/pool-actions.component';\nimport { PoolActionElementComponent } from './components/pool-action-element/pool-action-element.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NewQuestionPageComponent } from './components/new-question-page/new-question-page.component';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { NosWrapperModule } from './nos-wrapper/nos-wrapper.module';\nimport { ProfileDetailComponent } from './components/profile-detail/profile-detail.component';\n\nregisterLocaleData(localeSk);\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  // return new TranslateHttpLoader(http);\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageSkeletComponent,\n    PageNotFoundComponent,\n    HeaderComponent,\n    ProfileComponent,\n    PoolActionsComponent,\n    PoolActionElementComponent,\n    NewQuestionPageComponent,\n    PoolSummaryComponent,\n    CreatePoolProcessPageComponent,\n    SplashScreenPageComponent,\n    ContactListPageComponent,\n    PoolsPageComponent,\n    PoolTileComponent,\n    PoolFillPageComponent,\n    PoolComponent,\n    ProfilePageComponent,\n    AboutPageComponent,\n    ChangelogPageComponent,\n    LanguageSelectorComponent,\n    PoolSettingsComponent,\n    LocalizedDatePipe,\n    PollsResultPageComponent,\n    PollResultComponent,\n    CreateQuestionComponent,\n    ContactAddDialogComponent,\n    ProfileDetailComponent\n  ],\n  imports: [\n    ChartModule,\n    MatSlideToggleModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonToggleModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    NosWrapperModule,\n    RouterModule.forRoot(appRoutes, {useHash: true}),\n    HttpClientModule,\n    FormsModule,\n    NgxsModule.forRoot([\n      PollsState\n    ]),\n    NgxsStoragePluginModule.forRoot(),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  providers: [\n    NosApiService,\n    PoolsService,\n    {\n      provide: DateAdapter, useClass: NativeDateAdapter\n    },\n  ],\n  entryComponents: [ContactAddDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { PageSkeletComponent } from './pages/page-skelet/page-skelet.component';\nimport { PoolActionsComponent } from './components/pool-actions/pool-actions.component';\nimport { CreatePoolProcessPageComponent } from './pages/create-pool-process-page/create-pool-process-page.component';\nimport { ContactListPageComponent } from './pages/contact-list-page/contact-list-page.component';\nimport { PoolsPageComponent } from './pages/pools-page/pools-page.component';\nimport { PoolFillPageComponent } from './pages/pool-fill-page/pool-fill-page.component';\nimport { PoolResolver } from './shared/pools/pool-resolver.service';\nimport { ProfilePageComponent } from './pages/profile-page/profile-page.component';\nimport { AboutPageComponent } from './pages/about-page/about-page.component';\nimport { ChangelogPageComponent } from './pages/changelog-page/changelog-page.component';\nimport { PollListType } from './shared/pools/pollListType';\nimport { PollsResultPageComponent } from './pages/polls-result/polls-result.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: PageSkeletComponent,\n    children: [\n      {\n        path: '',\n        component: PoolActionsComponent,\n      },\n      {\n        path: 'create',\n        component: CreatePoolProcessPageComponent,\n      },\n      {\n        path: 'contacts',\n        component: ContactListPageComponent\n      },\n      {\n        path: 'pools',\n        component: PoolsPageComponent,\n        data: {type: PollListType.PRIVATE_LIST, animation: 'PollPage'}\n      },\n      {\n        path: 'ownPools',\n        component: PoolsPageComponent,\n        data: {type: PollListType.OWN_LIST, animation: 'PollPage'}\n      },\n      {\n        path: 'publicPools',\n        component: PoolsPageComponent,\n        data: {type: PollListType.PUBLIC_LIST, animation: 'PollPage'}\n      },\n      {\n        path: 'pool/:id',\n        component: PoolFillPageComponent,\n        resolve: {pool: PoolResolver}\n      },\n      {\n        path: 'result/:id',\n        component: PollsResultPageComponent,\n        resolve: {pool: PoolResolver}\n      },\n      {\n        path: 'profile',\n        component: ProfilePageComponent\n      }\n    ]\n  },\n  {\n    path: 'about',\n    component: AboutPageComponent\n  },\n  {\n    path: 'changelog',\n    component: ChangelogPageComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n","module.exports = \"<div>\\n  <h3>{{'actions.createContact' | translate}}</h3>\\n  <form class=\\\"add-wrapper\\\" [formGroup]=\\\"contactForm\\\" (submit)=\\\"saveContact()\\\">\\n    <mat-form-field class=\\\"question-name\\\">\\n      <input matInput [placeholder]=\\\"'profile.name' | translate\\\" formControlName=\\\"name\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"question-name\\\">\\n      <input matInput [placeholder]=\\\"'profile.location' | translate\\\" formControlName=\\\"city\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"question-name\\\">\\n      <input matInput [placeholder]=\\\"'profile.address' | translate\\\" formControlName=\\\"address\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"question-name\\\">\\n      <input type=\\\"email\\\" matInput [placeholder]=\\\"'profile.email' | translate\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <button [disabled]=\\\"contactForm.invalid\\\" class=\\\"voteo-button\\\" type=\\\"submit\\\">{{'actions.save' | translate}}</button>\\n  </form>\\n</div>\\n\"","module.exports = \".add-wrapper {\\n  display: flex;\\n  flex-direction: column; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from '../../shared/contact/contact.service';\nimport { MatDialogRef } from '@angular/material';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact-add-dialog',\n  templateUrl: './contact-add-dialog.component.html',\n  styleUrls: ['./contact-add-dialog.component.scss']\n})\nexport class ContactAddDialogComponent implements OnInit {\n\n  contactForm;\n\n  constructor(private _contactService: ContactService,\n              private _dialogRef: MatDialogRef<any>,\n              private fb: FormBuilder) {\n    this.contactForm = fb.group({\n      address: ['', Validators.required],\n      name: ['', Validators.required],\n      email: [''],\n      city: ['']\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n  saveContact() {\n    this._contactService.addContact(this.contactForm.value);\n    this._dialogRef.close();\n  }\n}\n","module.exports = \"<p>\\n  create-question works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-question',\n  templateUrl: './create-question.component.html',\n  styleUrls: ['./create-question.component.scss']\n})\nexport class CreateQuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header class=\\\"wrapper d-flex flex-row justify-content-between\\\">\\n  <div class=\\\"d-flex align-items-center\\\">\\n    <div class=\\\"logo-wrapper\\\">\\n      <img routerLink=\\\"/\\\" class=\\\"logo\\\" src=\\\"assets/img/voteologobiele.png\\\">\\n    </div>\\n    <!--<span  class=\\\"item\\\">{{'header.profile' | translate}}</span>-->\\n    <span routerLink=\\\"/contacts\\\" class=\\\"item\\\">{{'header.contactList' | translate}}</span>\\n    <span routerLink=\\\"/changelog\\\" class=\\\"item\\\">Changelog</span>\\n    <span routerLink=\\\"/about\\\" class=\\\"item\\\">{{'header.about' | translate}}<span class=\\\"gold\\\">{{'header.title' | translate}}</span></span>\\n  </div>\\n  <app-profile-detail>\\n    <div class=\\\"align-items-center\\\">\\n      <div routerLink=\\\"/profile\\\" class=\\\"user\\\">\\n        <div class=\\\"img-wrapper\\\">\\n          <img class=\\\"rounded-circle\\\" src=\\\"/assets/img/siluette.png\\\">\\n        </div>\\n        <div class=\\\"details\\\">\\n          <!--<span class=\\\"gold\\\">Kamil bitcoach</span>-->\\n          <span class=\\\"gold\\\">{{address}}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"language-selector align-items-center\\\">\\n      <app-language-selector\\n        [languages]=\\\"languages\\\"\\n        [selectedLanguage]=\\\"selectedLanguage\\\"\\n        (onSelectChange)=\\\"changeLanguage($event)\\\">\\n      </app-language-selector>\\n    </div>\\n  </app-profile-detail>\\n</header>\\n\"","module.exports = \".logo-wrapper {\\n  float: left;\\n  margin: 5px 35px 5px 0;\\n  cursor: pointer; }\\n  .logo-wrapper .name {\\n    font-size: 32px;\\n    color: #e1ab05; }\\n  .gold {\\n  color: #e1ab05; }\\n  .menu {\\n  display: flex;\\n  align-items: center;\\n  color: white; }\\n  .address {\\n  color: black; }\\n  .item {\\n  cursor: pointer;\\n  font-size: 18px;\\n  padding: 10px 25px; }\\n  .item:hover {\\n    color: #a1d0c5; }\\n  .user {\\n  display: flex;\\n  float: right;\\n  padding-right: 10px;\\n  height: 100%;\\n  position: relative;\\n  justify-content: center;\\n  cursor: pointer; }\\n  .user span {\\n    text-align: left; }\\n  .bitcoach-menu {\\n  display: flex;\\n  align-items: center; }\\n  .wrapper {\\n  color: #fff;\\n  padding: 0 30px;\\n  height: 60px;\\n  background: #2575fc; }\\n  .col-4, span {\\n  outline: none !important; }\\n  mat-select {\\n  border: 0px; }\\n  mat-form-field {\\n  display: block; }\\n  mat-form-field .mat-select-value-text {\\n    color: #fff !important; }\\n  .language {\\n  margin: auto; }\\n  .language-wrapper {\\n  margin: auto;\\n  display: inline-block; }\\n  .logo {\\n  height: 50px; }\\n  app-profile-detail {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  app-profile-detail .details {\\n    margin: 3px;\\n    display: flex;\\n    flex-direction: column; }\\n  .language-selector {\\n  float: right;\\n  padding: 10px; }\\n  .img-wrapper {\\n  width: 50px;\\n  height: 50px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .img-wrapper img {\\n    background-color: white;\\n    width: 45px;\\n    height: 45px;\\n    padding: 2px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  languages = [\n    'sk', 'en'\n  ];\n\n  selectedLanguage;\n\n  constructor(private _translateService: TranslateService,\n              private _poolsService: PoolsService) {\n  }\n\n  changeLanguage(language) {\n    this._translateService.use(language);\n    this.selectedLanguage = language;\n  }\n\n  ngOnInit() {\n    this.selectedLanguage = this.languages[1];\n  }\n\n  get address() {\n    return this._poolsService.address || '-';\n  }\n}\n","module.exports = \"<div (click)=\\\"togglePanel()\\\" class=\\\"selected\\\">{{'language.'+selectedLanguage | translate}}</div>\\n\\n<div class=\\\"panel\\\" [ngClass]=\\\"{'closed': !isOpened}\\\">\\n  <div class=\\\"language-panel\\\">\\n    <div class=\\\"item\\\" (click)=\\\"changeSelection(language)\\\"\\n         *ngFor=\\\"let language of languages\\\">{{'language.'+language | translate}}\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".selected {\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n  .selected:hover {\\n    color: #a1d0c5; }\\n  .panel {\\n  display: block;\\n  position: absolute;\\n  z-index: 99;\\n  transition: all 1s;\\n  overflow: hidden;\\n  right: 0; }\\n  .panel.closed {\\n    max-height: 0px; }\\n  .language-panel {\\n  display: block;\\n  cursor: pointer;\\n  background-color: #fff;\\n  padding: 10px; }\\n  .language-panel .item {\\n    cursor: pointer;\\n    color: #09245d;\\n    padding: 5px; }\\n  .language-panel .item:hover {\\n      color: #a1d0c5; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n\n  @Input() languages;\n  @Input() selectedLanguage;\n  @Output() onSelectChange = new EventEmitter<any>();\n\n  isOpened = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  togglePanel() {\n    this.isOpened = !this.isOpened;\n  }\n\n  changeSelection(language) {\n    this.onSelectChange.next(language);\n    this.isOpened = false;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"wrapper\\\">\\n    <form [formGroup]=\\\"createQuestionForm\\\">\\n      <span (click)=\\\"removeCurrentQuestion()\\\" class=\\\"remove\\\">X</span>\\n      <!--<div class=\\\"title voteo-bold\\\">{{'pools.question' | translate}}</div>-->\\n      <mat-form-field class=\\\"question-name\\\">\\n        <input matInput [placeholder]=\\\"'pools.question' | translate\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n      <div class=\\\"parameters\\\">\\n        <mat-slide-toggle class=\\\"param\\\" formControlName=\\\"openEnded\\\">\\n          <span class=\\\"label voteo-bold\\\">{{'pools.create.openEnded' | translate}}</span>\\n          <span class=\\\"hint\\\">{{'pools.create.openEndedHint' | translate}}</span>\\n        </mat-slide-toggle>\\n        <mat-slide-toggle class=\\\"param\\\" formControlName=\\\"multiple\\\">\\n          <span class=\\\"label voteo-bold\\\">{{'pools.create.multiple' | translate}}</span>\\n        </mat-slide-toggle>\\n      </div>\\n\\n      <fieldset formArrayName=\\\"options\\\">\\n        <button class=\\\"voteo-button add-option\\\" type=\\\"button\\\" (click)=\\\"addOption()\\\">\\n          <mat-icon>subject</mat-icon> {{'pools.create.addOption' | translate}}\\n        </button>\\n        <div class=\\\"\\\" *ngFor=\\\"let option of options.controls; let j=index\\\"\\n             [formGroupName]=\\\"j\\\">\\n          <div class=\\\"option\\\">\\n            <span class=\\\"label\\\">{{'pools.create.option' | translate}} {{j+1}}:</span>\\n            <input class=\\\"question-name\\\" formControlName=\\\"label\\\">\\n            <span class=\\\"remove\\\" (click)=\\\"removeOption(j)\\\">X</span>\\n          </div>\\n        </div>\\n      </fieldset>\\n\\n      <div class=\\\"submit\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \".question-name {\\n  width: 100%; }\\n\\nform {\\n  margin: 0px 20px 10px 20px; }\\n\\nmat-slide-toggle {\\n  font-size: 14px;\\n  color: #09245d; }\\n\\n.wrapper {\\n  margin: 0px 20px;\\n  z-index: 100; }\\n\\n.parameters .param {\\n  padding: 10px 30px; }\\n\\n.parameters .label {\\n  padding-left: 10px; }\\n\\n.option {\\n  display: flex;\\n  padding-bottom: 5px; }\\n\\n.option .label {\\n    font-size: 12px;\\n    width: 15%;\\n    margin: auto; }\\n\\n.option input {\\n    width: 85%; }\\n\\n.option .remove {\\n    padding-left: 5px; }\\n\\n.submit {\\n  justify-content: center;\\n  align-items: center;\\n  display: flex;\\n  width: 100%; }\\n\\n.submit button {\\n    margin: 5px; }\\n\\n.add-option {\\n  font-size: 12px;\\n  justify-content: center;\\n  align-items: center;\\n  display: flex;\\n  margin: 10px; }\\n\\n.left {\\n  font-size: 32px;\\n  cursor: pointer;\\n  position: absolute;\\n  top: 50%;\\n  left: -25px;\\n  border-bottom-left-radius: 25px;\\n  border-top-left-radius: 25px;\\n  width: 40px;\\n  display: flex;\\n  justify-content: center;\\n  border-right: 0px !important;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2); }\\n\\n.right {\\n  font-size: 32px;\\n  cursor: pointer;\\n  position: absolute;\\n  top: 50%;\\n  right: -22px;\\n  border-bottom-right-radius: 25px;\\n  border-top-right-radius: 25px;\\n  width: 40px;\\n  display: flex;\\n  justify-content: center;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2); }\\n\\n.switch-btn {\\n  background-color: white;\\n  color: #09245d;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.switch-btn:hover {\\n    background-color: rgba(48, 61, 144, 0.1); }\\n\\n.content {\\n  position: relative; }\\n\\n.remove {\\n  float: right;\\n  font-size: 16px;\\n  cursor: pointer; }\\n\\n.remove:hover {\\n    color: #5d0d0f;\\n    font-weight: bolder; }\\n\"","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component, ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport { v4 as uuid } from 'uuid';\n\n@Component({\n  selector: 'app-new-question-page',\n  templateUrl: './new-question-page.component.html',\n  styleUrls: ['./new-question-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NewQuestionPageComponent implements OnChanges, AfterViewInit {\n\n  @Output()\n  onUpdate = new EventEmitter();\n  @Output()\n  afterClickOnRemove = new EventEmitter();\n\n  @Input()\n  question;\n  @Input()\n  numberOfQuestions;\n  @Input()\n  currentQuestionIndex;\n\n  createQuestionForm: FormGroup;\n  optionIndex = 0;\n\n  constructor(private fb: FormBuilder, private _el: ElementRef) {\n    this.initForm();\n  }\n\n  ngAfterViewInit() {\n    this._el.nativeElement.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.question) {\n      this.initForm();\n\n      if (this.question) {\n        if (this.question.options) {\n          for (const option of this.question.options) {\n           this.addOption();\n          }\n        }\n\n        this.createQuestionForm.patchValue(this.question);\n      }\n    }\n  }\n\n  removeOption(index) {\n    this.options.removeAt(index);\n  }\n\n  initForm() {\n    this.optionIndex = 0;\n\n    this.createQuestionForm = this.fb.group({\n      'name': ['', Validators.required],\n      'openEnded': [false],\n      'multiple': [false],\n      'options': this.fb.array([])\n    });\n\n    this.createQuestionForm.valueChanges.subscribe(\n      questions => {\n        this.onUpdate.emit({form: this.createQuestionForm, questions});\n      }\n    );\n  }\n\n  addOption(label = '') {\n    const option = this.fb.group({\n      'id': [uuid()],\n      'label': [label, Validators.required]\n    });\n    this.optionIndex++;\n\n    this.options.push(option);\n  }\n\n  removeCurrentQuestion() {\n    this.afterClickOnRemove.next();\n  }\n\n  get hasMoreQuestions() {\n    return this.currentQuestionIndex < this.numberOfQuestions - 1;\n  }\n  get options() {\n    return this.createQuestionForm.get('options') as FormArray;\n  }\n\n  set options(options) {\n    this.createQuestionForm.get('options').setValue(options);\n  }\n\n  get operation() {\n    return this.currentQuestionIndex < this.numberOfQuestions ? '>' : '+';\n  }\n}\n","module.exports = \"<p-chart [type]=\\\"chartType\\\" [options]=\\\"chartOptions\\\" [data]=\\\"data\\\"></p-chart>\\n\"","module.exports = \"\"","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { PoolsService } from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-poll-result',\n  templateUrl: './poll-result.component.html',\n  styleUrls: ['./poll-result.component.scss']\n})\nexport class PollResultComponent implements OnInit, OnChanges {\n\n  @Input() options;\n  @Input() poll;\n  @Input() chartType = 'pie';\n\n  chartOptions;\n  labels = [];\n  dataset = [];\n\n  results = {};\n  data: any;\n\n  constructor(private _pollsService: PoolsService) {\n  }\n\n  switchChartType() {\n\n    this.chartType = this.chartType === 'pie' ? 'bar' : 'pie';\n    this.setUpPie();\n  }\n\n  setUpPie() {\n    if (this.chartType === 'pie') {\n      this.chartOptions = {\n        legend: {\n          position: 'top'\n        }\n      };\n    } else {\n      this.chartOptions = {\n        legend: {\n          position: 'none'\n        }\n      };\n    }\n    this.data = {...this.data};\n  }\n\n  ngOnChanges(changes) {\n    if (changes.chartType) {\n      this.setUpPie();\n    }\n  }\n\n  ngOnInit() {\n    for (const option of this.options) {\n      this._pollsService.getOptionResult(this.poll.id, option.id).subscribe(\n        result => {\n          this.labels.push(option.label);\n          this.dataset.push(result.stack[0].value);\n\n          this.data = {\n            labels: this.labels,\n            datasets: [\n              {\n                data: this.dataset,\n                backgroundColor: [\n                  '#FF6384',\n                  '#36A2EB',\n                  '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                  '#FF6384',\n                  '#36A2EB',\n                  '#FFCE56'\n                ]\n              }]\n          };\n          this.chartOptions = {\n            legend: {\n              position: 'top'\n            }\n          },\n          error => alert(error);\n        });\n    }\n  }\n}\n","module.exports = \"<mat-card class=\\\"action-wrapper\\\" (click)=\\\"redirectToPage()\\\" [ngClass]=\\\"{'hovered': hovered || isHovered}\\\">\\n  <mat-card-content class=\\\"content\\\">\\n    <div class=\\\"icon\\\">\\n      <img class=\\\"img-fluid\\\" [src]=\\\"picture\\\">\\n    </div>\\n\\n    <div class=\\\"action-name voteo-bold\\\">\\n      {{label | translate}}\\n    </div>\\n\\n    <div class=\\\"details\\\">\\n      <ng-content></ng-content>\\n    </div>\\n\\n    <!--<div class=\\\"button-wrapper\\\">-->\\n      <!--<button (click)=\\\"redirectToPage()\\\" class=\\\"voteo-bold\\\">{{'actions.viewAll' | translate}}</button>-->\\n    <!--</div>-->\\n  </mat-card-content>\\n\\n</mat-card>\\n\"","module.exports = \".action-wrapper {\\n  display: block;\\n  margin: 2px;\\n  cursor: pointer;\\n  background-color: #edeef1;\\n  text-align: center;\\n  height: 100%;\\n  transition: -webkit-transform .3s;\\n  transition: transform .3s;\\n  transition: transform .3s, -webkit-transform .3s; }\\n  .action-wrapper.hovered {\\n    -webkit-transform: scale(1.1);\\n            transform: scale(1.1);\\n    box-shadow: 0px 0px 10px 0px #e1ab05;\\n    z-index: 9999999999;\\n    background-color: white !important; }\\n  .action-name {\\n  font-size: 20px;\\n  color: #09245d; }\\n  .content {\\n  padding-bottom: 10px;\\n  height: 100%; }\\n  img {\\n  height: 150px;\\n  margin: 60px 0px; }\\n  button {\\n  cursor: pointer;\\n  border: 1px solid #09245d;\\n  border-radius: 2px;\\n  box-shadow: 1px rgba(0, 0, 0, 0.2);\\n  color: #09245d;\\n  background: linear-gradient(to right, #fff, rgba(48, 61, 144, 0.1)); }\\n  button:hover {\\n    color: #fff;\\n    background: linear-gradient(to right, #303d90, #09245d); }\\n\"","import { Component, HostBinding, Input, OnChanges } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-pool-action-element',\n  templateUrl: './pool-action-element.component.html',\n  styleUrls: ['./pool-action-element.component.scss']\n})\nexport class PoolActionElementComponent implements OnChanges {\n\n  @Input() label;\n  @Input() picture;\n  @Input() redirectLink;\n  @Input() isHovered;\n\n  @HostBinding('style.zIndex') index;\n\n  constructor(private router: Router) { }\n\n  ngOnChanges(changes) {\n    if (changes.isHovered) {\n      if (this.isHovered) {\n        this.index = 100000;\n      } else {\n        this.index = 10;\n      }\n    }\n  }\n\n  redirectToPage() {\n    this.router.navigate([this.redirectLink]);\n  }\n}\n","module.exports = \"<div class=\\\"title\\\">\\n  <h1>{{'voteo.title' | translate}}</h1>\\n</div>\\n\\n<div class=\\\"actions row\\\">\\n  <app-pool-action-element\\n    (mouseover)=\\\"onMouseOverItem(0)\\\"\\n    [isHovered]=\\\"hoveredItem === 0\\\"\\n    [picture]=\\\"'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNZlggA4RAvHkDD1nPAUczniJr_ts8zpECLEFWayyzxaPwIhPPXQ'\\\"\\n    [label]=\\\"'pools.types.add'\\\"\\n    [redirectLink]=\\\"'/create'\\\"\\n    class=\\\"col-md-3 action\\\">\\n    {{'pools.clickAdd' | translate}}\\n  </app-pool-action-element>\\n\\n  <app-pool-action-element\\n    (mouseover)=\\\"onMouseOverItem(1)\\\"\\n    [isHovered]=\\\"hoveredItem === 1\\\"\\n    [picture]=\\\"'assets/img/pools.png'\\\"\\n    [label]=\\\"'pools.types.create'\\\"\\n    [redirectLink]=\\\"'/ownPools'\\\"\\n    class=\\\"col-md-3 action\\\">\\n\\n    <div>{{'pools.your' | translate: numberOfOwnPolls}}</div>\\n  </app-pool-action-element>\\n\\n  <app-pool-action-element\\n    (mouseover)=\\\"onMouseOverItem(2)\\\"\\n    [isHovered]=\\\"hoveredItem === 2\\\"\\n    [picture]=\\\"'assets/img/vote.png'\\\"\\n    [label]=\\\"'pools.types.vote'\\\"\\n    [redirectLink]=\\\"'/pools'\\\"\\n    class=\\\"col-md-3 action\\\">\\n    {{'pools.noPending' | translate: numberOfPrivatePollsCount}}\\n  </app-pool-action-element>\\n\\n  <app-pool-action-element\\n    (mouseover)=\\\"onMouseOverItem(3)\\\"\\n    [isHovered]=\\\"hoveredItem === 3\\\"\\n    [picture]=\\\"'assets/img/public_pools.png'\\\"\\n    [label]=\\\"'pools.types.public'\\\" class=\\\"col-md-3 action\\\"\\n    [redirectLink]=\\\"'/publicPools'\\\">\\n    {{'pools.public' | translate: numberOfPublicPools}}\\n  </app-pool-action-element>\\n</div>\\n\"","module.exports = \":host {\\n  display: block;\\n  position: relative; }\\n\\n.action {\\n  padding: 0 !important;\\n  transition: all .3s; }\\n\\n.actions {\\n  margin: 0px 0px 0px 20px; }\\n\\n.title {\\n  padding: 40px;\\n  margin: auto;\\n  text-align: center; }\\n\\n.create {\\n  display: flex;\\n  cursor: pointer;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.create mat-icon {\\n    font-size: 22px;\\n    color: #09245d; }\\n\\n.create .text:hover {\\n    color: #09245d;\\n    text-decoration: underline; }\\n\"","import { Component, HostBinding, HostListener, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-pool-actions',\n  templateUrl: './pool-actions.component.html',\n  styleUrls: ['./pool-actions.component.scss']\n})\nexport class PoolActionsComponent implements OnInit {\n\n  publicPollsCount;\n  privatePollsCount;\n  ownPollsCount;\n  isMouseOutside = true;\n  hoveredItem = 2;\n  items = [\n    {\n      picture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNZlggA4RAvHkDD1nPAUczniJr_ts8zpECLEFWayyzxaPwIhPPXQ',\n      label: 'pools.types.add',\n      redirectionLink: '/create'\n    },\n    {\n      picture: 'assets/img/pools.png',\n      label: 'pools.types.create',\n      redirectionLink: '/ownPools'\n    },\n    {\n      picture: 'assets/img/vote.png',\n      label: 'pools.types.vote',\n      redirectionLink: '/pools'\n    },\n    {\n      picture: 'assets/img/public_pools.png',\n      label: 'pools.types.create',\n      redirectionLink: '/ownPools'\n    }\n  ];\n  @Select(state => state.polls) polls$: Observable<any>;\n\n  @HostListener('mouseout', ['$event'])\n  onMouseOut() {\n    this.hoveredItem = -1;\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  onKeyUp(event) {\n    const {keyCode} = event;\n    if (event.key === 'Enter') {\n      this.router.navigate([this.items[this.hoveredItem].redirectionLink]);\n      return;\n    }\n\n    switch (keyCode) {\n      case 39: {\n        if (this.hoveredItem < this.items.length - 1) {\n          this.hoveredItem++;\n        }\n        break;\n      }\n      case 37: {\n        if (this.hoveredItem > 0) {\n          this.hoveredItem--;\n        }\n      }\n    }\n  }\n\n  constructor(private router: Router,\n              private _pollService: PoolsService) {\n  }\n\n  onMouseOverItem(itemNumber) {\n    this.hoveredItem = itemNumber;\n  }\n\n  ngOnInit() {\n\n    this.polls$.subscribe(\n      polls => {\n        this.privatePollsCount = polls.privatePolls.filter(poll => poll.canVote === 'false').length;\n        this.publicPollsCount = polls.publicPolls.filter(poll => poll.canVote === 'false').length;\n        this.ownPollsCount = polls.ownPolls.length;\n      }\n    );\n    this._pollService.getAddress().subscribe(address => {\n      this._pollService.loadPrivatePolls();\n      this._pollService.loadPublicPolls();\n      this._pollService.loadOwnPolls();\n    });\n  }\n\n  createPool() {\n    this.router.navigate(['/create']);\n  }\n\n  get numberOfPrivatePollsCount() {\n    return {numberOfPools: this.privatePollsCount};\n  }\n\n  get numberOfPublicPools() {\n    return {numberOfPools: this.publicPollsCount};\n  }\n\n  get numberOfOwnPolls() {\n    return {numberOfPools: this.ownPollsCount};\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <form [formGroup]=\\\"poolSettings\\\">\\n    <div class=\\\"col-12 type\\\">\\n      {{'pools.settings.private' | translate}}\\n      <mat-slide-toggle formControlName=\\\"public\\\"></mat-slide-toggle>\\n      {{'pools.settings.public' | translate}}\\n    </div>\\n\\n    <fieldset class=\\\"col-12\\\" *ngIf=\\\"!isPublic\\\" formArrayName=\\\"privateAddresses\\\">\\n      <button class=\\\"voteo-button add-option\\\" type=\\\"button\\\" (click)=\\\"addPrivateAddress()\\\">\\n        {{'pools.create.addPrivateOption' |\\n        translate}}\\n      </button>\\n      <div class=\\\"address\\\" *ngFor=\\\"let address of addresses.controls; let j=index\\\"\\n           [formGroupName]=\\\"j\\\">\\n        <div class=\\\"option\\\">\\n          <span class=\\\"label\\\">{{'pools.create.address' | translate}} {{j}}:</span>\\n          <input class=\\\"question-name\\\" formControlName=\\\"address\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!--<div class=\\\"message\\\">-->\\n    <!--{{'message.tbd' | translate}}-->\\n    <!--</div>-->\\n    <div class=\\\"col-12\\\">\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-select [placeholder]=\\\"'pools.settings.verification' | translate\\\" formControlName=\\\"verification\\\">\\n          <mat-option *ngFor=\\\"let verification of verifications\\\" [value]=\\\"verification.value\\\">\\n            {{verification.label}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"date col-md-6\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput [matDatepicker]=\\\"startPicker\\\" [placeholder]=\\\"'pools.settings.startDate' | translate\\\"\\n               formControlName=\\\"startDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"startPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #startPicker></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"date col-md-6\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput [matDatepicker]=\\\"endPicker\\\" [placeholder]=\\\"'pools.settings.endDate' | translate\\\"\\n               formControlName=\\\"endDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"endPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #endPicker></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"col-12\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"reward\\\">\\n        {{'pools.settings.reward' | translate}}\\n      </mat-checkbox>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"isReward\\\">\\n      <mat-form-field class=\\\"full-width col-4\\\">\\n        <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.totalBudget' | translate\\\"\\n               formControlName=\\\"totalBudget\\\">\\n        <span matSuffix>GAS</span>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"full-width col-4\\\">\\n        <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.totalReward' | translate\\\"\\n               formControlName=\\\"totalReward\\\">\\n        <span matSuffix>GAS</span>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"full-width col-4\\\">\\n        <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.participans' | translate\\\"\\n               formControlName=\\\"participans\\\">\\n      </mat-form-field>\\n    </ng-container>\\n\\n    <div class=\\\"col-12\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"tokenRequirements\\\">\\n        {{'pools.settings.tokenRequirements' | translate}}\\n      </mat-checkbox>\\n    </div>\\n\\n\\n    <ng-container *ngIf=\\\"areTokenRequirements\\\">\\n      <mat-form-field class=\\\"col-md-6\\\">\\n        <mat-select [placeholder]=\\\"'pools.settings.tokenType' | translate\\\" formControlName=\\\"tokenType\\\">\\n          <mat-option *ngFor=\\\"let tokenType of tokenTypes\\\" [value]=\\\"tokenType.value\\\">\\n            {{tokenType.label}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"col-md-6 full-width\\\">\\n        <input type=\\\"number\\\" matInput [placeholder]=\\\"'pools.settings.minimumAmount' | translate\\\"\\n               formControlName=\\\"minimumAmount\\\">\\n      </mat-form-field>\\n\\n      <!--<mat-form-field class=\\\"col-md-6 full-width\\\">-->\\n      <!--<input type=\\\"number\\\" matInput [placeholder]=\\\"'pools.settings.tokensPerVote' | translate\\\"-->\\n      <!--formControlName=\\\"tokensPerVote\\\">-->\\n      <!--</mat-form-field>-->\\n\\n      <div class=\\\"date col-md-6\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [matDatepicker]=\\\"tokenSnapshot\\\" [placeholder]=\\\"'pools.settings.tokenSnapshot' | translate\\\"\\n                 formControlName=\\\"tokenSnapshot\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"tokenSnapshot\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #tokenSnapshot></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"col-12\\\">\\n      <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"audianceSpecification\\\">\\n        {{'pools.settings.audianceSpecification' | translate}}\\n      </mat-checkbox>\\n    </div>\\n    <!--<button (click)=\\\"back()\\\" class=\\\"voteo-button\\\">{{'actions.back' | translate}}</button>-->\\n    <!--<button (click)=\\\"submit()\\\" class=\\\"voteo-button\\\">{{'actions.submit' | translate}}</button>-->\\n    <ng-content></ng-content>\\n  </form>\\n</div>\\n\"","module.exports = \".date {\\n  display: inline-block; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.address {\\n  margin: 5px; }\\n\\n.message {\\n  position: absolute;\\n  display: block;\\n  top: 50%;\\n  left: 44%;\\n  z-index: 2;\\n  font-size: 16px; }\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pool-settings',\n  templateUrl: './pool-settings.component.html',\n  styleUrls: ['./pool-settings.component.scss']\n})\nexport class PoolSettingsComponent implements OnInit {\n\n  poolSettings: FormGroup;\n  verifications = [{\n    value: 'KYC',\n    label: 'KYC'\n  },\n    {\n      value: 'KYC 2.0',\n      label: 'KYC 2.0'\n    }];\n  tokenTypes = [\n    {\n    value: 'ETH',\n    label: 'ETH'\n    },\n    {\n      value: 'NEO',\n      label: 'NEO'\n    }];\n\n  @Output() onUpdate = new EventEmitter<any>();\n\n  constructor(private fb: FormBuilder) {\n    this.poolSettings = fb.group({\n      public: [true],\n      verification: [{value: '', disabled: true}],\n      startDate: [new Date()],\n      endDate: [''],\n      totalReward: [{value: 0, disabled: true}],\n      totalBudget: [{value: 0, disabled: true}],\n      reward: [{value: '', disabled: true}],\n      maxParticipants: [''],\n      tokenRequirements: [false],\n      minimumAmount: [],\n      tokensPerVote: [{value: '', disabled: true}],\n      participans: [],\n      tokenSnapshot: [new Date()],\n      tokenType: [],\n      privateAddresses: fb.array([]),\n      audianceSpecification: [{value: false, disabled: true}]\n    });\n  }\n\n  ngOnInit() {\n    this.poolSettings.valueChanges.subscribe(\n      settings => {\n        this.onUpdate.emit({settings, form: this.poolSettings});\n      }\n    );\n    this.onUpdate.emit({settings: this.poolSettings.value, form: this.poolSettings});\n  }\n\n  addPrivateAddress() {\n    const option = this.fb.group({\n      'address': [''],\n    });\n    this.addresses.push(option);\n  }\n\n  get isPublic() {\n    return this.poolSettings.get('public').value;\n  }\n\n  get addresses() {\n    return this.poolSettings.get('privateAddresses') as FormArray;\n  }\n\n  get isReward() {\n    return this.poolSettings.get('reward').value;\n  }\n\n  get areTokenRequirements() {\n    return this.poolSettings.get('tokenRequirements').value;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"header\\\">{{'pools.newPool' | translate}}</div>\\n  <div class=\\\"title voteo-bold\\\">{{'pools.summary' | translate}}</div>\\n\\n  <ng-container *ngIf=\\\"title.length < 1\\\">\\n    <div class=\\\"message\\\">\\n      {{'pools.noTitle' | translate}}\\n    </div>\\n  </ng-container>\\n\\n  <div *ngIf=\\\"questions.length > 0; else noQuestions\\\" class=\\\"voteo-table\\\">\\n    <ng-container *ngFor=\\\"let question of questions\\\">\\n      <div class=\\\"highlight voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.name' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.name}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.openEnded' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.openEnded}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.multiple' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.multiple}}</span>\\n      </div>\\n      <div *ngFor=\\\"let option of question?.options; let i=index\\\" class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.option' | translate}} {{i}}</span>\\n        <span class=\\\"column value\\\">{{option.label}}</span>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n\\n  <div class=\\\"voteo-table\\\">\\n    <div class=\\\"highlight voteo-row\\\">\\n      {{'pools.create.settings' | translate}}\\n    </div>\\n    <ng-container *ngIf=\\\"settings\\\">\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.public' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.public}}</span>\\n      </div>\\n      <ng-container *ngIf=\\\"!settings?.public\\\">\\n        <div *ngFor=\\\"let privateAddress of settings?.privateAddresses; let i=index\\\" class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.create.privateAddress' | translate}} {{i}}</span>\\n          <span class=\\\"column value\\\">{{privateAddress}}</span>\\n        </div>\\n      </ng-container>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.verification' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.verification}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.startDate' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.startDate | localizedDate}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.endDate' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.endDate | localizedDate}}</span>\\n      </div>\\n      <ng-container *ngIf=\\\"settings.reward\\\">\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.totalReward' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.totalReward}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.totalBudget' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.totalBudget}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.participans' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.participans}}</span>\\n        </div>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"settings.tokenRequirements\\\">\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.tokenType' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.tokenType}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.minimumAmount' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.minimumAmount}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.tokensPerVote' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.tokensPerVote}}</span>\\n        </div>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"button-wrapper\\\">\\n    <ng-content></ng-content>\\n    <!--<button (click)=\\\"back()\\\" class=\\\"voteo-button\\\">{{'actions.back' | translate}}</button>-->\\n    <!--<button (click)=\\\"submit()\\\" class=\\\"voteo-button\\\">{{'actions.submit' | translate}}</button>-->\\n  </div>\\n</div>\\n\\n<ng-template #noQuestions>\\n  <div class=\\\"message\\\">\\n    {{'pools.noQuestions' | translate}}\\n  </div>\\n</ng-template>\\n\"","module.exports = \".column {\\n  display: inline-block;\\n  width: 50%;\\n  border-right: 1px solid #9c9da0; }\\n  .column:last-child {\\n    border-right: 0px; }\\n  .key {\\n  color: #09245d;\\n  font-family: BrochaBold; }\\n  .highlight .key {\\n  color: #fff !important; }\\n  .highlight {\\n  color: #fff !important;\\n  background-color: #09245d; }\\n  .highlight:first-child {\\n    border-top-right-radius: 9px;\\n    border-top-left-radius: 9px; }\\n  .value {\\n  text-align: center; }\\n  .header {\\n  width: 100%;\\n  display: block;\\n  position: relative; }\\n  .button-wrapper {\\n  padding: 10px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .button-wrapper button:nth-child(n-1) {\\n    margin-left: 10px; }\\n  .voteo-table {\\n  margin-bottom: 10px; }\\n  .message {\\n  text-align: center;\\n  padding: 10px;\\n  border-radius: 5px;\\n  margin: 30px;\\n  background-color: #edeef1;\\n  border: 1px solid #5d0d0f; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pool-summary',\n  templateUrl: './pool-summary.component.html',\n  styleUrls: ['./pool-summary.component.scss']\n})\nexport class PoolSummaryComponent implements OnInit {\n\n  @Output()\n  onSubmitPressed = new EventEmitter();\n  @Output()\n  onBackPressed = new EventEmitter();\n  @Input()\n  pool;\n  @Input()\n  title;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.pool.settings.privateAddresses = this.pool.settings.privateAddresses.map(address => address.address);\n  }\n\n  submit() {\n    this.onSubmitPressed.next();\n  }\n\n  back() {\n    this.onBackPressed.next();\n  }\n\n  get name() {\n    return this.questions.name;\n  }\n\n  get openEnded() {\n    return this.questions.openEnded;\n  }\n\n  get multiple() {\n    return this.questions.multiple;\n  }\n\n  get options() {\n    return this.questions.options;\n  }\n\n  get questions() {\n    return this.pool.questions;\n  }\n\n  get settings() {\n    return this.pool.settings;\n  }\n\n}\n","module.exports = \"<div class=\\\"tile-wrapper\\\">\\n  <div class=\\\"upper-part\\\">\\n    <span class=\\\"title voteo-bold\\\">{{poolTitle}}</span>\\n  </div>\\n  <div class=\\\"bottom-part\\\">\\n    <div class=\\\"attributes\\\">\\n      <div class=\\\"attribute\\\">\\n        <mat-icon>help</mat-icon>\\n        <span class=\\\"value\\\">{{'pools.questions' | translate}}:{{numberOfQuestions}}</span>\\n      </div>\\n      <div class=\\\"attribute\\\">\\n        <mat-icon>people</mat-icon>\\n        <span class=\\\"value\\\">{{'pools.voted' | translate}}:{{voted}}</span>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!isPending; else pendingMessage\\\" class=\\\"actions\\\">\\n      <button [disabled]=\\\"hasVoted\\\" class=\\\"voteo-button\\\" (click)=\\\"openVoting()\\\">{{'pools.vote' | translate}}</button>\\n      <button *ngIf=\\\"isOwnPoll\\\" class=\\\"voteo-button\\\" (click)=\\\"showResults()\\\">{{'pools.result' | translate}}</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #pendingMessage>\\n  IS PENDING...\\n</ng-template>\\n\"","module.exports = \".tile-wrapper {\\n  border: 0.5px solid #9c9da0; }\\n\\n.upper-part {\\n  background-color: #09245d;\\n  border: 0.5px solid #09245d;\\n  padding-left: 15px;\\n  color: #fff; }\\n\\n.bottom-part {\\n  position: relative;\\n  display: flex;\\n  width: 100%;\\n  margin: 5px 0px;\\n  align-items: center; }\\n\\n.bottom-part .actions {\\n    width: 30%;\\n    display: inline-block;\\n    margin: 5px;\\n    height: 28px; }\\n\\n.bottom-part .actions button:first-child {\\n      margin-right: 4px; }\\n\\n.attributes {\\n  display: inline-block;\\n  width: 70%; }\\n\\n.attributes .attribute {\\n    display: flex;\\n    padding-left: 5px; }\\n\\n.attributes .attribute mat-icon {\\n      color: #09245d;\\n      cursor: default;\\n      margin-right: 5px; }\\n\\n.attributes .attribute .value {\\n      font-size: 14px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center; }\\n\\n.title {\\n  color: #fff; }\\n\"","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { PollModel } from '../../shared/pools/poll.model';\n\n@Component({\n  selector: 'app-pool-tile',\n  templateUrl: './pool-tile.component.html',\n  styleUrls: ['./pool-tile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoolTileComponent {\n\n  @Input() pool: PollModel;\n  @Input() ownPoll;\n\n  constructor(private router: Router) {\n  }\n\n\n  openVoting() {\n    if (this.hasFreeVoting) {\n      this.router.navigate([`pool/${this.pool.id}`]);\n    }\n  }\n\n  showResults() {\n    if (this.isOwnPoll) {\n      this.router.navigate([`result/${this.pool.id}`]);\n    }\n  }\n\n  get poolTitle() {\n    return this.pool.poolTitle;\n  }\n\n  get numberOfQuestions() {\n    return this.pool.numberOfQuestions;\n  }\n\n  get voted() {\n    return this.pool.voted;\n  }\n\n  get hasVoted() {\n    return this.pool.canVote === 'true' ? true : false;\n  }\n\n  get isOwnPoll() {\n    return this.ownPoll;\n  }\n\n  get isPending() {\n    return this.pool.pending;\n  }\n\n  get hasFreeVoting() {\n    return true; //this.voted < this.neededVoters;\n  }\n}\n","module.exports = \"<div class=\\\"pool-wrapper\\\">\\n  <div class=\\\"pool-title voteo-bold\\\">{{pool.poolTitle}}</div>\\n    <div class=\\\"question\\\" *ngFor=\\\"let question of pool.questions; let i = index\\\">\\n      <div class=\\\"voteo-bold question-name\\\">{{question.name}}</div>\\n      <div class=\\\"options\\\">\\n\\n        <ng-container *ngIf=\\\"question.multiple; else singleOption\\\">\\n          <mat-checkbox (change)=\\\"updateAnswer($event, i, option)\\\" *ngFor=\\\"let option of question.options\\\">{{option.label}}</mat-checkbox>\\n        </ng-container>\\n\\n        <ng-template #singleOption>\\n          <mat-radio-group>\\n            <mat-radio-button (change)=\\\"updateAnswer($event, i, option)\\\" *ngFor=\\\"let option of question.options\\\"\\n                              class=\\\"example-margin\\\" [value]=\\\"option.label\\\">{{option.label}}\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </ng-template>\\n\\n\\n        <ng-container *ngIf=\\\"question.openEnded\\\">\\n          <input (input)=\\\"updateAnswer($event, i, $event.target.value, true)\\\" class=\\\"freeText\\\">\\n        </ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button (click)=\\\"vote()\\\" class=\\\"voteo-button\\\">{{'actions.vote' | translate}}</button>\\n    </div>\\n</div>\\n\"","module.exports = \".options, mat-radio-group {\\n  display: block;\\n  width: 100%; }\\n  .options input, mat-radio-group input {\\n    display: inline-block;\\n    width: 40%; }\\n  mat-checkbox, mat-radio-button {\\n  display: inline-block;\\n  width: 40%; }\\n  .actions {\\n  width: 100%;\\n  margin: auto;\\n  text-align: center;\\n  padding: 20px; }\\n  .pool-title {\\n  font-size: 28px; }\\n  .question-name {\\n  padding: 5px;\\n  width: 100%;\\n  color: #fff !important;\\n  background-color: #e1ab05;\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px; }\\n  .question {\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  margin: 10px 0px; }\\n  .options {\\n  padding: 10px;\\n  border: 0.5px solid #9c9da0;\\n  border-top: 0px; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { VoteOnPoll } from '../../shared/pools/polls.actions';\nimport { PollModel } from '../../shared/pools/poll.model';\n\n@Component({\n  selector: 'app-pool',\n  templateUrl: './pool.component.html',\n  styleUrls: ['./pool.component.scss']\n})\nexport class PoolComponent implements OnInit {\n\n  @Input()\n  pool: PollModel;\n\n  @Input()\n  type;\n\n  result = [];\n  optionResult = [];\n\n  constructor(private _poolService: PoolsService,\n              private router: Router,\n              private store: Store) {\n\n  }\n\n  ngOnInit() {\n\n    this.result = new Array<any>(this.pool.questions.length);\n    this.result.fill({answers: [], freeText: ''});\n    // const option = this.fb.group({\n    //   'label': [label, Validators.required]\n    // });\n    // this.options.push(option);\n  }\n\n  vote() {\n    this._poolService.registerVote(this.optionResult, this.pool.id).subscribe(\n      () => {\n        this.pool.votePending = true;\n        this.store.dispatch(new VoteOnPoll(this.pool));\n        this.router.navigate(['/']);\n    },\n      error => alert(error)\n    );\n  }\n\n  updateAnswer(event, questionIndex, answer, freeText = false) {\n    const question = this.pool.questions[questionIndex];\n\n    if (!freeText) {\n      if (question.multiple) {\n        if (event.checked) {\n          this.result[questionIndex] = {...this.result[questionIndex], answers: [...this.result[questionIndex].answers, answer.id]};\n        } else {\n          this.result[questionIndex].answers.splice(answer.id, 1);\n        }\n      } else {\n        this.result[questionIndex] = {answers: [answer.id]};\n      }\n    } else {\n      this.result[questionIndex] = {answers: [...this.result[questionIndex].answers], freeText: answer};\n    }\n\n   this.optionResult = [];\n\n      this.result.map(\n      optionIds => {\n        this.optionResult = [...this.optionResult, ...optionIds.answers];\n      }\n    );\n  }\n\n  isMultiple(question) {\n    return question.multiple;\n  }\n}\n","module.exports = \"<div class=\\\"profile-wrapper\\\">\\n  <div (click)=\\\"toggleShowDetail()\\\" class=\\\"img-wrapper\\\">\\n    <img class=\\\"rounded-circle\\\" src=\\\"/assets/img/siluette.png\\\">\\n  </div>\\n  <ng-container *ngIf=\\\"showDetail\\\">\\n    <div class=\\\"detail-wrapper\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </ng-container>\\n</div>\\n\\n\\n\"","module.exports = \".img-wrapper {\\n  cursor: pointer;\\n  display: flex;\\n  height: 45px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  width: 45px;\\n  justify-content: center; }\\n  .img-wrapper img {\\n    padding: 2px;\\n    width: 45px;\\n    height: 45px;\\n    background-color: white; }\\n  .img-wrapper img:hover {\\n      background: #edeef1; }\\n  .detail-wrapper {\\n  margin-top: 7px;\\n  background: #edeef1;\\n  position: absolute;\\n  z-index: 3;\\n  right: 0;\\n  opacity: 1;\\n  padding: 3px;\\n  color: #09245d; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.scss']\n})\nexport class ProfileDetailComponent {\n\n  showDetail = false;\n  constructor() { }\n\n  toggleShowDetail() {\n    this.showDetail  = !this.showDetail;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n\\n  <div class=\\\"social-wrapper\\\">\\n    <div class=\\\"profile-picture\\\">\\n      <img class=\\\"img-fluid\\\" [src]=\\\"picture\\\"\\n           [style.width.px]=\\\"pictureSize\\\"\\n           [style.height.px]=\\\"pictureSize\\\">\\n    </div>\\n\\n    <div class=\\\"name\\\">\\n      {{name}} <span *ngIf=\\\"isValidated\\\"><img class=\\\"validated\\\" src=\\\"assets/img/check.png\\\"></span>\\n    </div>\\n  </div>\\n  <div class=\\\"information\\\">\\n    <div class=\\\"voteo-table\\\">\\n      <input #cryptoAddressElement class=\\\"voteo-row\\\"\\n             (click)=\\\"copyToClipboard()\\\" [ngModel]=\\\"cryptoAddress\\\">\\n      <div class=\\\"voteo-row\\\">{{city}}</div>\\n      <div class=\\\"voteo-row\\\">{{contacts}} {{'profile.contacts' | translate}}</div>\\n      <div class=\\\"voteo-row\\\">{{email}}</div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".wrapper {\\n  border: 1px solid #e1ab05;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n  position: relative;\\n  text-align: center;\\n  height: 370px; }\\n\\n.profile-picture {\\n  padding: 10px; }\\n\\n.profile-picture img {\\n    height: 150px; }\\n\\n.name {\\n  font-size: 26px; }\\n\\n.validated {\\n  width: 26px;\\n  height: 26px; }\\n\\n.detail {\\n  display: block;\\n  position: relative;\\n  width: 90%;\\n  margin: auto;\\n  border: 1px solid #9c9da0;\\n  border-radius: 10px; }\\n\\n.detail input {\\n    border-radius: 10px 10px 0px 0px;\\n    width: 100%;\\n    text-align: left;\\n    border: 0px;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    border-bottom: 1px solid #9c9da0;\\n    outline: none !important;\\n    cursor: pointer; }\\n\\n.row {\\n  display: block;\\n  padding: 5px;\\n  text-align: left;\\n  margin: auto;\\n  border-bottom: 1px solid #9c9da0;\\n  word-wrap: break-word; }\\n\\n.row:last-child {\\n    border-bottom: 0px; }\\n\\n.information {\\n  padding: 10px 0px; }\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @ViewChild('cryptoAddressElement')\n  cryptoAddressElement;\n\n  @Input() profile;\n  @Input() pictureSize = 150;\n  @Input() isOwn = false;\n\n  constructor(private _poolsService: PoolsService) { }\n\n  ngOnInit() {\n  }\n\n  copyToClipboard() {\n    this.cryptoAddressElement.nativeElement.select();\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n  }\n\n  get cryptoAddress() {\n    if (this.isOwn) {\n      return this._poolsService.address || '-';\n    } else {\n      return this.profile.address;\n    }\n  }\n\n  get city() {\n    return this.profile.city;\n  }\n\n  get contacts() {\n    return this.profile.contacts;\n  }\n\n  get email() {\n    return this.profile.email;\n  }\n\n  get isValidated() {\n    return this.profile.validated;\n  }\n\n  get name() {\n    return this.profile.name;\n  }\n\n  get picture() {\n    return this.profile.picture;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NosApiService} from './services/nos-api.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [NosApiService],\n  declarations: [],\n  exports: []\n})\nexport class NosWrapperModule { }\n","import {Injectable} from '@angular/core';\nimport {from, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NosApiService {\n\n  nos;\n  address;\n\n\n  constructor() {\n    if ((window as any).NOS) {\n      this.nos = (window as any).NOS.V1;\n    }\n    if (this.isConnected()) {\n      this.getAddress().subscribe(\n        address =>\n          this.address = address\n      );\n    }\n  }\n\n  isConnected() {\n    return this.nos;\n  }\n\n  getAddress(): Observable<any> {\n    if (this.nos) {\n      return from(this.nos.getAddress());\n    }\n  }\n\n  getBalance(asset: string, addres?: string) {\n\n    //examples asset - NEO\n    const NEO = 'c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b';\n    const address = 'AZPkgTJixxkSFPyBZrcVpLj9nsHsPDUVkF';\n\n    if (!addres) {\n      return this.nos.getBalance({asset});\n    } else {\n      this.nos.getBalance({asset, address});\n    }\n  }\n\n  testInvoke(scriptHash: string, operation: string, args?: string[]): Observable<any> {\n\n    if (this.nos) {\n      return from(this.nos.testInvoke({scriptHash, operation, args}));\n    }\n  }\n\n  invoke(scriptHash: string, operation: string, args?: string[]): Observable<any> {\n\n\n    if (this.nos) {\n      return from(this.nos.invoke({scriptHash, operation, args}));\n    }\n  }\n\n  getStorage(scriptHash: string, key: string) {\n    if (this.nos) {\n      return from(this.nos.getStorage({scriptHash, key}));\n    }\n  }\n\n  claimGas(): Observable<string> {\n    return from(this.nos.claimGas());\n  }\n}\n","module.exports = \"<div class=\\\"about-header\\\">\\n  About us\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  This dApp is provided to nOS by Bitcoach development team. Bitcoach community is a group of SK-CZ crypto-enthusiasts.\\n  <br>\\n  You can join us on the following channels:\\n  <br><br>\\n  <b>Telegram:  </b>t.me/join_bitcoachCHAT<br>\\n  <b>Twitter:  </b><a href=\\\"https://twitter.com/BitC0ach\\\">twitter.com/BitC0ach</a>\\n  <br>\\n  <b>Facebook:  </b><a href=\\\"https://www.facebook.com/bitc0ach/\\\">facebook.com/bitc0ach</a>\\n</div>\\n\"","module.exports = \".about-header {\\n  margin: 20px;\\n  font-size: 36px;\\n  align-items: center;\\n  text-align: center;\\n  padding: 10px;\\n  background: #edeef1; }\\n\\n.about-desc {\\n  border: 1px;\\n  border-style: solid;\\n  border-color: #e1ab05;\\n  margin: 20px;\\n  font-size: 16px;\\n  padding: 10px;\\n  background: #edeef1; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"about-header\\\">\\n  Changelog\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Current version (0.9.1):</h4>\\n  <li>Creation of public and private polls and voting</li>\\n  <li>Multiple choice questions and open-ended option working</li>\\n  <li>Listing of a public, assigned and created polls</li>\\n  <li>Right now only creator of the poll can see the results</li>\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Next version (0.9.2):</h4>\\n  <li>Date constraints</li>\\n  <li>Token balances constraints</li>\\n  <li>Working contact list</li>\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Planned:</h4>\\n  <li>Rewards system</li>\\n  <li>KYC</li>\\n</div>\\n\"","module.exports = \".about-header {\\n  margin: 20px;\\n  font-size: 36px;\\n  align-items: center;\\n  text-align: center;\\n  padding: 10px;\\n  background: #edeef1; }\\n\\n.about-desc {\\n  border: 1px;\\n  border-style: solid;\\n  border-color: #e1ab05;\\n  margin: 20px;\\n  font-size: 16px;\\n  padding: 10px;\\n  background: #edeef1; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-changelog-page',\n  templateUrl: './changelog-page.component.html',\n  styleUrls: ['./changelog-page.component.scss']\n})\nexport class ChangelogPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"list\\\">\\n\\n  <app-profile class=\\\"item\\\"\\n               *ngFor=\\\"let contact of contacts$ | async\\\"\\n               [profile]=\\\"contact\\\"\\n               [pictureSize]=\\\"100\\\"></app-profile>\\n  <div class=\\\"actions\\\">\\n    <mat-icon class=\\\"action-button\\\" (click)=\\\"openAddContact()\\\">add</mat-icon>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".list {\\n  display: flex;\\n  flex-wrap: wrap; }\\n  .list .item {\\n    display: block;\\n    width: 180px !important;\\n    padding: 0px;\\n    margin: 10px;\\n    margin-top: 0px;\\n    transition: all .4s;\\n    -webkit-user-select: none !important;\\n       -moz-user-select: none !important;\\n        -ms-user-select: none !important;\\n            user-select: none !important;\\n    border-radius: 10px; }\\n  .list .item:hover {\\n      -webkit-transform: scale(1.1);\\n              transform: scale(1.1);\\n      z-index: 99;\\n      background-color: #edeef1; }\\n  .actions {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .actions mat-icon {\\n    height: 50px;\\n    width: 50px;\\n    margin: auto;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ContactService} from '../../shared/contact/contact.service';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { ContactAddDialogComponent } from '../../components/contact-add-dialog/contact-add-dialog.component';\n\n@Component({\n  selector: 'app-contact-list-page',\n  templateUrl: './contact-list-page.component.html',\n  styleUrls: ['./contact-list-page.component.scss']\n})\nexport class ContactListPageComponent implements OnInit {\n\n  contacts$;\n  constructor(private _contactService: ContactService, private dialog: MatDialog) {\n    this.contacts$ = _contactService.getContacts();\n  }\n\n  ngOnInit() {\n  }\n\n  openAddContact() {\n    this.dialog.open(ContactAddDialogComponent);\n  }\n\n}\n","module.exports = \"<mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n  <mat-step [stepControl]=\\\"questionsForm\\\">\\n    <div class=\\\"questions-part\\\">\\n      <mat-form-field class=\\\"title-input\\\">\\n        <input matInput [placeholder]=\\\"'pools.name' | translate\\\" [(ngModel)]=\\\"poolName\\\">\\n      </mat-form-field>\\n      <form>\\n        <ng-template matStepLabel>{{'pools.createQuestions' | translate}}</ng-template>\\n        <div class=\\\"title voteo-bold\\\">{{'pools.questions' | translate}}</div>\\n        <app-new-question-page *ngFor=\\\"let question of questions; let i = index\\\"\\n                               class=\\\"question\\\"\\n                               [question]=\\\"question\\\"\\n                               [currentQuestionIndex]=\\\"i\\\"\\n                               (afterClickOnRemove)=\\\"removeCurrentQuestion(i)\\\"\\n                               (onUpdate)=\\\"questionsUpdate($event, i)\\\">\\n        </app-new-question-page>\\n        <div class=\\\"button-wrapper\\\">\\n          <button #newQuestion class=\\\"voteo-button\\\" mat-button (click)=\\\"addNew()\\\">\\n            <span class=\\\"content\\\"><mat-icon>add</mat-icon>{{'actions.addQuestion' | translate}}</span>\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"button-wrapper\\\">\\n      <button class=\\\"voteo-button\\\" [disabled]=\\\"questionsForm?.invalid || poolName.length < 1\\\" mat-button matStepperNext>Next</button>\\n    </div>\\n\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"settingsForm\\\">\\n    <form>\\n      <ng-template matStepLabel>{{'pools.poolSettings' | translate}}</ng-template>\\n      <app-pool-settings (onUpdate)=\\\"settingUpdate($event)\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button class=\\\"voteo-button\\\" mat-button matStepperPrevious>Back</button>\\n          <button [disabled]=\\\"settingsForm?.invalid\\\" class=\\\"voteo-button\\\" mat-button matStepperNext>Next</button>\\n        </div>\\n      </app-pool-settings>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <form>\\n      <ng-template matStepLabel>{{'pools.summary' | translate}}</ng-template>\\n      <app-pool-summary [pool]=\\\"pool\\\"\\n                        [title]=\\\"poolName\\\"\\n                        (onSubmitPressed)=\\\"createPool()\\\"\\n                        (onBackPressed)=\\\"goToEdit()\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button class=\\\"voteo-button\\\" mat-button matStepperPrevious>Back</button>\\n          <button class=\\\"voteo-button\\\" mat-button [disabled]=\\\"!hasQuestions || poolName.length < 1\\\"\\n                  (click)=\\\"createPool()\\\">{{'pools.create.message' | translate}}\\n          </button>\\n        </div>\\n      </app-pool-summary>\\n      <div>\\n\\n      </div>\\n    </form>\\n  </mat-step>\\n  <!--<mat-step>-->\\n  <!--<ng-template matStepLabel>{{'pools.done' | translate}}</ng-template>-->\\n  <!--{{'pools.confirmation' | translate}}-->\\n  <!--<div>-->\\n  <!--<button mat-button matStepperPrevious>Back</button>-->\\n  <!--<button mat-button [disabled]=\\\"!hasQuestions\\\" (click)=\\\"createPool()\\\">{{'pools.create.message' | translate}}</button>-->\\n  <!--<button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>-->\\n  <!--</div>-->\\n  <!--</mat-step>-->\\n</mat-horizontal-stepper>\\n\"","module.exports = \".title {\\n  color: #09245d;\\n  font-size: 20px;\\n  text-align: center; }\\n\\n.wrapper {\\n  border: 1px solid #e1ab05;\\n  border-radius: 5px; }\\n\\n.title-input {\\n  width: 100%; }\\n\\n.button-wrapper {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  margin: 10px; }\\n\\n.button-wrapper button:first-child {\\n    margin-right: 5px; }\\n\\n.question {\\n  display: block;\\n  margin: 25px 0px; }\\n\\n.voteo-button .content {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\"","import { ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { PoolsService } from '../../shared/pools/pools.service';\n\nimport { v4 as uuid } from 'uuid';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { AddPoll } from '../../shared/pools/polls.actions';\n\n@Component({\n  selector: 'app-create-pool-process-page',\n  templateUrl: './create-pool-process-page.component.html',\n  styleUrls: ['./create-pool-process-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CreatePoolProcessPageComponent implements OnInit {\n\n  @ViewChild('newQuestion') newQuestion: ElementRef;\n\n  pool = {\n    questions: [\n      {\n        'name': '',\n        'openEnded': false,\n        'multiple': false,\n        'options': []\n      }],\n    settings: {},\n    poolTitle: '',\n    id: '',\n    pending: true,\n    numberOfQuestions: '',\n    voted: 0,\n    canVote: true,\n    created: null,\n    votePending: false,\n  };\n\n  currentIndex = 0;\n  currentQuestion = {};\n  waitingValidation = false;\n  testResult;\n  receivedPool;\n  newPool;\n  error;\n  poolName = '';\n  updatedQuestions = [];\n  questions = [{}];\n\n  questionsForm;\n  settingsForm;\n\n  constructor(private _poolsService: PoolsService,\n              private router: Router,\n              private store: Store) {\n  }\n\n  ngOnInit() {\n    this.currentQuestion = this.pool[this.currentIndex];\n  }\n\n  continueToSummary(question) {\n    this.pool[this.currentIndex] = question;\n    this.currentQuestion = question;\n    this.waitingValidation = true;\n  }\n\n  goToEdit() {\n    this.waitingValidation = false;\n  }\n\n  addNew() {\n    this.questions.push({});\n  }\n\n  removeCurrentQuestion(index) {\n    // this.currentQuestion = this.pool[this.currentIndex];\n    this.questions.splice(index, 1);\n    this.pool.questions.splice(index, 1);\n  }\n\n  settingUpdate(data) {\n    const {settings, form} = data;\n    this.settingsForm = form;\n    console.log(settings, form);\n    (this.pool as any).settings = {...settings, privateAddresses: settings.privateAddresses.map(address => address.address)};\n  }\n\n  questionsUpdate(data, index) {\n    const {questions, form} = data;\n    this.pool.questions[index] = questions;\n    this.questionsForm = form;\n  }\n\n  createPool() {\n    if (this.hasQuestions && this.poolName.length > 0) {\n\n      this.pool.poolTitle = this.poolName;\n      this.pool.id = `${uuid()}_${this.poolName}_${this.pool.questions.length}`;\n      this.pool.numberOfQuestions = String(this.pool.questions.length);\n      this.pool.created = new Date();\n\n      this._poolsService.createPool(this.pool, this.pool.id).subscribe(\n        () => {\n          this.store.dispatch(new AddPoll(this.pool));\n          this.router.navigate(['/ownPools']);\n          // this.receivedPool = result.script.replace('\\'','');\n        },\n        error => {\n          alert('There was some issue with writing data into blockchain. Wait a couple of minutes and try again.');\n          this.error = error;\n        }\n      );\n    }\n  }\n\n\n  testInvoke() {\n    this._poolsService.testInvoke().subscribe(\n      result => {\n        this.testResult = result;\n\n        if (result.stack) {\n          this.testResult = result;\n          // this.testResult = stringFromHex(result.stack[0].value);\n        }\n        // this.testResult = stringFromArray(result.stack[0].value);\n      },\n      error => console.log('ON ERROR =', error)\n    );\n  }\n\n  get hasQuestions() {\n    return this.pool.questions.length > 0;\n  }\n\n  get numberOfQuestions() {\n    return this.pool.questions.length - 1;\n  }\n}\n","module.exports = \"<p>\\n  404: This page doesn't exists. We are sorry!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\n</div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  height: 75%; }\\n\\n.header {\\n  width: 100%;\\n  display: block;\\n  position: relative; }\\n\\n.content {\\n  padding: 10px;\\n  margin: 20px 8%;\\n  width: 100%; }\\n\\n.profile {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  display: table;\\n  top: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ContactService} from '../../shared/contact/contact.service';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from '../../shared/animations';\n\n@Component({\n  selector: 'app-page-skelet',\n  templateUrl: './page-skelet.component.html',\n  styleUrls: ['./page-skelet.component.scss'],\n  animations: [\n    slideInAnimation\n    // animation triggers go here\n  ]\n})\nexport class PageSkeletComponent {\n\n  contact$;\n  data;\n\n  constructor(private _contactService: ContactService) {\n    this.contact$ = _contactService.getOwnUserInfo();\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","module.exports = \"<div class=\\\"pool-wrapper\\\">\\n  <h3>\\n    <mat-icon class=\\\"back-button\\\" (click)=\\\"goBack()\\\">arrow_back</mat-icon>\\n    {{poll.poolTitle}}\\n    <div class=\\\"chart-actions\\\">\\n      <mat-icon class=\\\"action-button\\\" (click)=\\\"switchChartType()\\\">{{chartTypeIcon}}</mat-icon>\\n      <mat-icon class=\\\"action-button\\\" (click)=\\\"print()\\\">print</mat-icon>\\n    </div>\\n  </h3>\\n  <div class=\\\"results\\\">\\n    <div class=\\\"col-md-4 col-sm-12\\\" *ngFor=\\\"let question of poll.questions; let i=index\\\">\\n      <div class=\\\"question\\\">\\n        <div class=\\\"voteo-bold question-name\\\">{{i+1}}. {{question.name}}</div>\\n        <app-poll-result class=\\\"result\\\" [poll]=\\\"poll\\\" [chartType]=\\\"chartType\\\"\\n                         [options]=\\\"question.options\\\"></app-poll-result>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".results {\\n  display: flex;\\n  flex-wrap: wrap;\\n  width: 100%;\\n  justify-content: center; }\\n\\n.question {\\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\\n  border: 0.5px solid #9c9da0;\\n  padding: 20px;\\n  margin: 15px;\\n  width: 100%; }\\n\\n.pool-wrapper {\\n  width: 85%;\\n  text-align: center; }\\n\\n.question-name {\\n  font-size: 18px; }\\n\\n.back-button {\\n  float: left; }\\n\\n.back-button {\\n  cursor: pointer;\\n  color: #09245d;\\n  user-input: none; }\\n\\n.back-button:hover {\\n    color: #e1ab05; }\\n\\nh3 .chart-actions {\\n  display: inline-block;\\n  float: right;\\n  margin-right: 20px; }\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { stringFromHex } from '../../shared/core/helper';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { ActivatedRoute } from '@angular/router';\nimport 'jspdf';\ndeclare let jsPDF;\n\n@Component({\n  selector: 'app-polls-result',\n  templateUrl: './polls-result.component.html',\n  styleUrls: ['./polls-result.component.scss']\n})\nexport class PollsResultPageComponent {\n\n  poll;\n  chartType = 'pie';\n  chartTypeIcon = 'show_chart';\n\n  @ViewChild('chart') chart: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private elementRef: ElementRef) {\n    this.poll = JSON.parse(stringFromHex(this.route.snapshot.data.pool.stack[0].value[1].value));\n  }\n\n  print() {\n    window.print();\n    // const doc = new jsPDF();\n    // alert(doc);\n    // doc.fromHTML(this.elementRef.nativeElement.html(), 15, 15, {\n    //   'width': 170,\n    // });\n    // doc.save('sample-file.pdf');\n    // const openWindow = window.open(\"\", \"title\", \"attributes\");\n    // openWindow.document.write(this.chart.nativeElement.innerHTML);\n    // openWindow.document.close();\n    // openWindow.focus();\n    // openWindow.print();\n    // openWindow.close();\n  }\n\n  goBack() {\n    history.back();\n  }\n\n  switchChartType() {\n    this.chartType = this.chartType === 'pie' ? 'bar' : 'pie';\n    this.chartTypeIcon = this.chartTypeIcon === 'pie_chart' ? 'show_chart' : 'pie_chart';\n  }\n}\n","module.exports = \"<div class=\\\"pool-fill-wrapper\\\">\\n  <app-pool [pool]=\\\"pool\\\"></app-pool>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {stringFromHex} from '../../shared/core/helper';\nimport {PoolsService} from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-pool-fill-page',\n  templateUrl: './pool-fill-page.component.html',\n  styleUrls: ['./pool-fill-page.component.scss']\n})\nexport class PoolFillPageComponent implements OnInit {\n\n  pool = {};\n  error;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.pool = JSON.parse(stringFromHex(this.route.snapshot.data.pool.stack[0].value[1].value));\n  }\n\n\n}\n","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"floating\\\">\\n    <h4 class=\\\"center\\\">\\n      <mat-icon class=\\\"back-button\\\" (click)=\\\"goBack()\\\">arrow_back</mat-icon>\\n      {{title | translate}}\\n    </h4>\\n    <div class=\\\"settings-wrapper\\\">\\n      <div class=\\\"settings\\\">\\n        <span>{{'pools.list.settings' | translate}}</span>\\n\\n        <mat-button-toggle-group [value]=\\\"'all'\\\" (change)=\\\"changeView($event)\\\">\\n          <mat-button-toggle value=\\\"all\\\">{{'pools.list.all' | translate}}</mat-button-toggle>\\n          <mat-button-toggle value=\\\"notVoted\\\">{{'pools.list.notVoted' | translate}}</mat-button-toggle>\\n          <mat-button-toggle value=\\\"voted\\\">{{'pools.list.voted' | translate}}</mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n      <div class=\\\"settings columns\\\">\\n        <span>{{'pools.list.columns' | translate}}</span>\\n\\n        <mat-button-toggle-group [value]=\\\"12 / itemSize\\\" (change)=\\\"changeColumns($event)\\\">\\n          <mat-button-toggle [value]=\\\"1\\\">1</mat-button-toggle>\\n          <mat-button-toggle [value]=\\\"2\\\">2</mat-button-toggle>\\n          <mat-button-toggle [value]=\\\"3\\\">3</mat-button-toggle>\\n        </mat-button-toggle-group>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"pools-wrapper\\\">\\n    <app-pool-tile [class]=\\\"'pool-item col-ms-12 col-md-' + itemSize\\\" *ngFor=\\\"let pool of polls; trackBy: pollTracker\\\"\\n                   [ownPoll]=\\\"areOwnPools\\\" [pool]=\\\"pool\\\"></app-pool-tile>\\n  </div>\\n</div>\\n\"","module.exports = \".pool-item {\\n  display: block;\\n  padding: 5px 10px;\\n  transition: all .2s; }\\n\\n.pools-wrapper {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.floating {\\n  top: 0px;\\n  padding: 10px 0px;\\n  margin: auto;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  display: flex;\\n  background-color: white;\\n  z-index: 2;\\n  width: 100%; }\\n\\n.center {\\n  display: flex;\\n  align-items: center;\\n  width: 180px;\\n  margin: 0; }\\n\\n.back-button {\\n  width: 35px;\\n  height: 35px;\\n  font-size: 35px;\\n  cursor: pointer;\\n  color: #09245d;\\n  user-input: none;\\n  position: absolute;\\n  left: -40px; }\\n\\n.back-button:hover {\\n    color: #e1ab05; }\\n\\n.settings-wrapper {\\n  display: flex;\\n  justify-content: center;\\n  width: 100%;\\n  align-items: stretch; }\\n\\n.settings {\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column; }\\n\\n.settings mat-button-toggle-group {\\n    justify-content: center;\\n    align-items: center;\\n    height: 20px; }\\n\\n.settings.columns {\\n    position: absolute;\\n    right: 0; }\\n\"","import { Component } from '@angular/core';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PollListType } from '../../shared/pools/pollListType';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SetType } from '../../shared/pools/polls.actions';\nimport { slideInAnimation } from '../../shared/animations';\nimport { PollModel } from '../../shared/pools/poll.model';\n\n@Component({\n  selector: 'app-pools-page',\n  templateUrl: './pools-page.component.html',\n  styleUrls: ['./pools-page.component.scss']\n})\nexport class PoolsPageComponent {\n\n  @Select(state => state.polls) polls$: Observable<any>;\n\n  areOwnPools;\n  polls: PollModel[];;\n  type;\n  title;\n  allPolls: PollModel[];\n  itemSize = 6;\n\n  constructor(private _poolsService: PoolsService,\n              private _activatedRoute: ActivatedRoute,\n              private router: Router,\n              private store: Store) {\n\n    _activatedRoute.data.subscribe(\n      result => {\n        this.type = result.type;\n\n        this.store.dispatch(new SetType(this.type));\n\n        switch (this.type) {\n          case PollListType.PRIVATE_LIST : {\n            this.title = 'pools.title.private';\n            _poolsService.loadPrivatePolls();\n\n            this.polls$.subscribe(polls => {\n              this.polls = polls.privatePolls;\n            });\n            break;\n          }\n          case PollListType.OWN_LIST: {\n            this.title = 'pools.title.own';\n            this._poolsService.loadOwnPolls();\n            this.areOwnPools = true;\n            this.polls$.subscribe(polls => {\n              this.polls = polls.ownPolls;\n            });\n            break;\n          }\n          case PollListType.PUBLIC_LIST: {\n            this.title = 'pools.title.public';\n            this._poolsService.loadPublicPolls();\n\n            this.polls$.subscribe(polls => {\n              this.polls = polls.publicPolls;\n            });\n          }\n        }\n        this.allPolls = this.polls;\n      }\n    );\n  }\n\n  changeColumns(data) {\n    const {value} = data;\n\n    this.itemSize = 12 / value;\n  }\n\n  changeView(data) {\n    const {value} = data;\n\n    switch (value) {\n      case 'all': {\n        this.polls = this.allPolls;\n        break;\n      }\n      case 'notVoted': {\n        this.polls = this.allPolls.filter(poll => poll.canVote === 'false');\n        break;\n      }\n      case 'voted': {\n        console.log('here');\n        this.polls = this.allPolls.filter(poll => poll.canVote === 'true');\n        break;\n      }\n    }\n  }\n\n  goBack() {\n    this.router.navigate(['/']);\n  }\n\n  pollTracker(index, poll) {\n    return poll.id;\n  }\n}\n","module.exports = \"<div class=\\\"profile-wrapper\\\">\\n  <div class=\\\"info\\\">\\n    <div routerLink=\\\"/pools\\\" class=\\\"assigned\\\">{{'pools.youHaveGotAssigned' | translate : numberOfAssignedPools}}</div>\\n    <div routerLink=\\\"/ownPools\\\" class=\\\"created\\\">{{'pools.youHaveCreated' | translate : numberOfCreatedPools}}</div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Select } from '@ngxs/store';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit, OnDestroy {\n\n\n  @Select(state => state.polls) polls$: Observable<any>;\n\n  createdPollsLength;\n  assignmedPollsLength;\n\n  subscriptions = [];\n\n  ngOnDestroy() {\n    for (const subscription of this.subscriptions) {\n      subscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n\n    this.subscriptions.push(this.polls$.subscribe(\n      polls => {\n        const {ownPolls, privatePolls} = polls;\n        this.createdPollsLength = ownPolls.length;\n        this.assignmedPollsLength = privatePolls.filter(poll => poll.canVote === 'false').length;\n      }\n    ));\n  }\n\n  get numberOfCreatedPools() {\n    return {\n      number: this.createdPollsLength\n    };\n  }\n\n  get numberOfAssignedPools() {\n    return {\n      number: this.assignmedPollsLength\n    };\n  }\n\n}\n","module.exports = \"<p>\\n  splash-screen-page works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splash-screen-page',\n  templateUrl: './splash-screen-page.component.html',\n  styleUrls: ['./splash-screen-page.component.scss']\n})\nexport class SplashScreenPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { animate, animateChild, group, query, style, transition, trigger } from '@angular/animations';\n\nexport const slideInAnimation =\n  trigger('routeAnimations', [\n    transition('PollPage <=> *', [\n      style({ position: 'relative' }),\n      query(':enter, :leave', [\n        style({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%'\n        })\n      ]),\n      query(':enter', [\n        style({ right: '-100%'})\n      ]),\n      query(':leave', animateChild()),\n      group([\n        query(':leave', [\n          animate('300ms ease-out', style({ left: '100%'}))\n        ]),\n        query(':enter', [\n          animate('300ms ease-out', style({ left: '0%'}))\n        ])\n      ]),\n      query(':enter', animateChild()),\n    ]),\n    transition('* <=> FilterPage', [\n      style({ position: 'relative' }),\n      query(':enter, :leave', [\n        style({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%'\n        })\n      ]),\n      query(':enter', [\n        style({ left: '-100%'})\n      ]),\n      query(':leave', animateChild()),\n      group([\n        query(':leave', [\n          animate('200ms ease-out', style({ left: '100%'}))\n        ]),\n        query(':enter', [\n          animate('300ms ease-out', style({ left: '0%'}))\n        ])\n      ]),\n      query(':enter', animateChild()),\n    ])\n  ]);\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private contacts = [\n    {\n      name: 'Lukas Cader',\n      picture: '/assets/img/siluette.png',\n      city: 'Bratislava',\n      contacts: 4,\n      email: 'info@bitcoach.net',\n      validated: true\n    },\n    {\n      name: 'Michal Sevcik',\n      picture: '/assets/img/siluette.png',\n      city: 'Bratislava',\n      contacts: 3,\n      email: 'info@bitcoach.net',\n      validated: true\n    },\n    {\n      name: 'Branislav Mojsej',\n      picture: '/assets/img/siluette.png',\n      city: 'Horna Dolna',\n      contacts: 150,\n      email: 'info@bitcoach.net',\n      validated: false\n    }\n  ];\n\n  constructor() {\n  }\n\n  getOwnUserInfo() {\n    return of(\n      {\n        name: 'Kamil Bitcoach',\n        city: 'Bratislava',\n        contacts: 3,\n        email: 'info@bitcoach.net',\n        picture: '/assets/img/siluette.png',\n        validated: true\n      });\n  }\n\n  getContacts(): Observable<any> {\n    return of(this.contacts);\n  }\n\n  addContact(contact) {\n    // this part should be added through the smart contract?\n    contact.contacts = 12;\n    contact.picture = '/assets/img/siluette.png';\n    this.contacts.push(contact);\n  }\n}\n","import { environment } from '../../../environments/environment';\n\nexport class Methods {\n\n  static scriptHash = !environment.production ? 'f24b174d2d1e6551ed3274a436f731b4765ccfca' : '7135c7bb56bf7a79162651cdafa3fd6fb11d3b5e';\n\n  // OPERATIONS HERE\n  static getPoolOperation = 'GetPoll';\n  static createPoolOperation = 'RegisterPoll';\n  static getPublicAll = 'GetPublicAll';\n  static getCreatedPolls = 'GetCreatedPolls';\n  static getAssignedPolls = 'GetAssignedPolls';\n  static getPoolById = 'GetPollById';\n  static registerVote = 'RegisterVote';\n  static getOptionResults = 'GetOptionResults';\n\n  static getPools = 'ENTER_OPERATION_CODE_HERE';\n}\n","export function stringFromArray(data) {\n  const count = data.length;\n  let str = '';\n\n  for (let index = 0; index < count; index += 1) {\n    str += String.fromCharCode(data[index]);\n  }\n\n  return str;\n}\n\nexport function stringFromHex(str1) {\n  const hex = str1.toString();\n  let str = '';\n  for (let n = 0; n < hex.length; n += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n  }\n  return str;\n}\n\nexport function hexToString(str) {\n  var result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  return result;\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n  name: 'localizedDate',\n  pure: false\n})\nexport class LocalizedDatePipe implements PipeTransform {\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  transform(value: any, pattern: string = 'mediumDate'): any {\n    const datePipe: DatePipe = new DatePipe(this.translateService.currentLang);\n    return datePipe.transform(value, pattern);\n  }\n\n}\n","export enum PollListType {\n  OWN_LIST, PRIVATE_LIST, PUBLIC_LIST\n}\n","import { PollModel } from './poll.model';\nimport { PollListType } from './pollListType';\n\nexport class AddPoll {\n  static readonly type = '[Pools] Add Poll';\n  constructor(public poll: PollModel) {}\n}\n\nexport class SetOwnPolls {\n  static readonly type = '[Pools] Setting own Polls';\n  constructor(public polls: PollModel[]) {}\n}\n\nexport class SetPrivatePolls {\n  static readonly type = '[Pools] Setting private Polls';\n  constructor(public polls: PollModel[]) {}\n}\n\nexport class SetPublicPolls {\n  static readonly type = '[Pools] Setting public Polls';\n  constructor(public polls: PollModel[]) {}\n}\n\nexport class SetType {\n  static readonly type = '[Pools] Setting type of current Polls';\n  constructor(public pollType: PollListType) {}\n}\n\nexport class VoteOnPoll {\n  static readonly type = '[Pools] Vote on private Poll';\n  constructor(public poll: PollModel) {}\n}\n","import { stringFromHex } from '../core/helper';\nimport { PollModel } from './poll.model';\n\nexport function parsePolls(polls): PollModel[] {\n  const parsedPolls = Array<PollModel>();\n  // this.result = result.stack[0];\n  for (const pool of polls.stack[0].value) {\n    const id = stringFromHex(pool.value[0].value);\n    const parsedArray = id.split('_');\n    const poolTitle = parsedArray[1] ? parsedArray[1] : '-';\n    const numberOfQuestions = parsedArray[2] ? parsedArray[2] : '0';\n    parsedPolls.push(\n      {\n        id,\n        poolTitle,\n        numberOfQuestions,\n        voted: pool.value[1].value,\n        canVote: stringFromHex(pool.value[2].value),\n        pending: false,\n        votePending: false\n      });\n  }\n\n  return parsedPolls;\n}\n","import { State, Action, StateContext } from '@ngxs/store';\nimport {\n  AddPoll,\n  SetOwnPolls,\n  SetPrivatePolls,\n  SetPublicPolls, SetType,\n  VoteOnPoll,\n} from './polls.actions';\n\nimport { PollsModel } from './pools.model';\nimport { PollListType } from './pollListType';\n\n​\n@State<PollsModel>({\n  name: 'polls',\n  defaults: {\n    ownPolls: [],\n    privatePolls: [],\n    publicPolls: [],\n    poolListType: null\n  }\n})\nexport class PollsState {\n\n  constructor() {}\n\n  @Action(AddPoll)\n  AddPoll(ctx: StateContext<PollsModel>, action: AddPoll) {\n    const state = ctx.getState();\n    console.log(action);\n\n    ctx.setState(\n      {\n        ...state,\n        ownPolls: [action.poll, ...state.ownPolls]\n      }\n    );\n  }\n\n  @Action(SetOwnPolls)\n  SetOwnPolls(ctx: StateContext<PollsModel>, action: SetOwnPolls) {\n    const state = ctx.getState();\n    const pendingPolls = state.ownPolls.filter(poll => {\n      if ((poll.pending && !action.polls.some(actualPoll => poll.id ===  actualPoll.id))) {\n        return poll;\n      }\n    } );\n\n    const pendingVotes = state.ownPolls.filter(poll => poll.votePending);\n    const polls = action.polls.map(poll => {\n      const pendingPoll = pendingVotes.find(actualPendingPoll => actualPendingPoll.id === poll.id && poll.canVote === 'false');\n\n      if (pendingPoll) {\n        return pendingPoll;\n      } else {\n        return poll;\n      }\n    }).reverse();\n\n    ctx.setState({\n      ...state,\n      ownPolls: [...pendingPolls, ...polls]\n    });\n  }\n\n  @Action(SetPrivatePolls)\n  SetPrivatePolls(ctx: StateContext<PollsModel>, action: SetPrivatePolls) {\n    const state = ctx.getState();\n    const pendingVotes = state.privatePolls.filter(poll => poll.votePending);\n    const polls = action.polls.map(poll => {\n      const pendingPoll = pendingVotes.find(actualPendingPoll => actualPendingPoll.id === poll.id && poll.canVote === 'false');\n\n      if (pendingPoll) {\n        return pendingPoll;\n      } else {\n        return poll;\n      }\n    }).reverse();\n\n    ctx.setState({\n      ...state,\n      privatePolls: [ ...polls]\n    });\n  }\n\n  @Action(SetPublicPolls)\n  SetPublicPolls(ctx: StateContext<PollsModel>, action: SetPublicPolls) {\n    const state = ctx.getState();\n    const pendingVotes = state.publicPolls.filter(poll => poll.votePending);\n    const polls = action.polls.map(poll => {\n      const pendingPoll = pendingVotes.find(actualPendingPoll => actualPendingPoll.id === poll.id && poll.canVote === 'false');\n\n      if (pendingPoll) {\n        return pendingPoll;\n      } else {\n        return poll;\n      }\n    }).reverse();\n\n    ctx.setState({\n      ...state,\n      publicPolls: [ ...polls]\n    });\n  }\n\n  @Action(VoteOnPoll)\n  VoteOnPoll(ctx: StateContext<PollsModel>, action: VoteOnPoll) {\n    const state = ctx.getState();\n\n    switch (state.poolListType) {\n      case PollListType.OWN_LIST: {\n        ctx.setState({\n            ...state,\n            ownPolls: [...state.ownPolls.filter(poll => poll.id !== action.poll.id), action.poll]\n          }\n        );\n        break;\n      }\n\n      case PollListType.PUBLIC_LIST: {\n        ctx.setState({\n            ...state,\n            publicPolls: [...state.publicPolls.filter(poll => poll.id !== action.poll.id), action.poll]\n          }\n        );\n        break;\n      }\n\n      case PollListType.PRIVATE_LIST: {\n\n        ctx.setState({\n            ...state,\n            privatePolls: [...state.privatePolls.filter(poll => poll.id !== action.poll.id), action.poll]\n          }\n        );\n        break;\n      }\n    }\n\n  }\n\n  @Action(SetType)\n  SetType(ctx: StateContext<PollsModel>, action: SetType) {\n    const state = ctx.getState();\n\n    ctx.setState({\n        ...state,\n        poolListType: action.pollType\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {PoolsService} from './pools.service';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {hexToString} from '../core/helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoolResolver implements Resolve<any> {\n  constructor(private _poolsService: PoolsService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const id = route.paramMap.get('id').toString();\n\n    return this._poolsService.getPoolById(id);\n   // return this._poolsService.getPool(route.paramMap.get('id'));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NosApiService} from '../../nos-wrapper/services/nos-api.service';\nimport {Methods} from '../core/Methods';\nimport {Observable, of} from 'rxjs';\nimport { parsePolls } from './polls.helper';\nimport { SetOwnPolls, SetPrivatePolls, SetPublicPolls } from './polls.actions';\nimport { Store } from '@ngxs/store';\n\n\n@Injectable()\nexport class PoolsService {\n\n  address;\n  actualPolls;\n\n  constructor(private _nosService: NosApiService,\n              private store: Store) {\n    if (_nosService.isConnected()) {\n      _nosService.getAddress().subscribe(\n        address => {\n          this.address = address;\n        }\n      );\n    }\n  }\n\n  getOptionResult(pollId, optionId) {\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getOptionResults,\n      [this._nosService.address, pollId, optionId]\n    );\n  }\n\n  public getPrivatePolls(address = this._nosService.address) {\n    // TODO: CHHANGE\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getAssignedPolls,\n      [address]\n    );\n  }\n\n  public getOwnPolls(address = this._nosService.address) {\n    // TODO: CHHANGE\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getCreatedPolls,\n      [address]\n    );\n  }\n\n  public getAddress() {\n    return this._nosService.getAddress();\n  }\n\n  public loadPublicPolls() {\n    this.getAllPublic().subscribe(\n      pools => {\n        const parsedPolls = parsePolls(pools);\n        this.store.dispatch(new SetPublicPolls(parsedPolls));\n      }\n    );\n  }\n\n  public loadOwnPolls() {\n    this.getOwnPolls().subscribe(\n      pools => {\n        const parsedPolls = parsePolls(pools);\n        this.store.dispatch(new SetOwnPolls(parsedPolls));\n      }\n    );\n  }\n\n  public loadPrivatePolls() {\n    this.getPrivatePolls().subscribe(\n      pools => {\n        const parsedPolls = parsePolls(pools);\n        this.store.dispatch(new SetPrivatePolls(parsedPolls));\n      }\n    );\n  }\n\n  public getPool(id) {\n    // return of({\n    //   id: 0,\n    //   name: 'What do you think about yourself',\n    //   questions: [{\n    //     name: 'kto si',\n    //     'openEnded': false,\n    //     'multiple': false,\n    //     'options': [\n    //       {'label': 'ja'},\n    //       {'label': 'ty'},\n    //       {'label': 'on'},\n    //     ]\n    //   },{\n    //       name: 'where have you been',\n    //       'openEnded': true,\n    //       'multiple': true,\n    //       'options': [\n    //         {'label': 'ja'},\n    //         {'label': 'ty'},\n    //         {'label': 'on'},\n    //       ]\n    //     }]\n    // });\n    // return this._nosService.getStorage(\n    //   Methods.scriptHash,\n    //   'poll'\n    // );\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPoolOperation,\n      ['eqweqw']);\n  }\n\n  public registerVote(results, poolId) {\n    const result = [poolId, ...results]\n    return this._nosService.invoke(\n      Methods.scriptHash,\n      Methods.registerVote,\n      [this._nosService.address, 'DATA', ...result]\n    );\n  }\n  public getAllPublic(address = this._nosService.address) {\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPublicAll,\n      [address]\n    );\n  }\n\n  public getPoolById(id): Observable<any> {\n\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPoolById,\n      [this._nosService.address, id]\n    );\n  }\n\n  public createPool(poolParams: any, poolName) {\n    const addresses = (poolParams.settings.public) ? [''] : poolParams.settings.privateAddresses;\n      return this._nosService.invoke(\n        Methods.scriptHash,\n        Methods.createPoolOperation,\n        [this._nosService.address, JSON.stringify(poolParams), poolName, ...addresses]\n      );\n\n  }\n\n  public getPoolInvoke(script) {\n    return this._nosService.invoke(\n      script,\n      Methods.createPoolOperation,\n      ['dsajdksajkasdjskksksajdaskjsadkdjaskLUKAS', 'LUKAS']\n    );\n  }\n\n  public testStorage() {\n    return this._nosService.getStorage(\n      '9a309cfe03cead5b653bbb11f68ff6beced8f031',\n      'bucket.neo.target'\n    );\n  }\n\n  public testInvoke() {\n    return this._nosService.testInvoke(\n      '9a309cfe03cead5b653bbb11f68ff6beced8f031',\n      'GetDomain',\n      ['AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y', 'bucket.neo']\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}